[{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CellsPickMe","text":"CellsPickMe streamlined R package cell type proportion prediction heterogeneous tissue (.e. deconvolution) based DNA methylation (DNAme) data. cell identity crucially linked cell function DNAme profiles, estimation cell type proportion instrumental understanding major factors driving DNAme variability. Accounting inter-individual cellular heterogeneity also vital epigenome-wide association studies accurately evaluate signals associated variables interest. CellsPickMe package takes DNAme data generated Illumina microarray predict cellular composition based cell types available reference profiles. Notably, population cells, package “picks” DNAme features best predict cellular identities machine learning algorithms improve deconvolution performance. Currently, algorithm compatible peripheral blood, cord blood, saliva, brain (neuron vs non-neuron). table illustrate reference datasets available CellsPickMe package deconvolution. curated UniBlood references (7, 13, 19) address current challenge deconvoluting longitudinal pediatric blood samples. Refer [UniBlood Reference Creation][UniBlood Reference Creation] article details UniBlood references.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"available-reference-datasets-for-tissues-in-cellspickme","dir":"Articles","previous_headings":"Introduction","what":"Available reference datasets for tissues in CellsPickMe","title":"CellsPickMe","text":"Tissue Reference dataset ID getRef() function LA Salas et al. (2022) Enhanced cell deconvolution peripheral blood using DNA methylation high-resolution immune profiling. Nat Commun. 13, 761. doi: 10.1038/s41467-021-27864-7 FlowSorted.BloodExtended.EPIC DC Koestler et al. (2016). Improving cell mixture deconvolution identifying optimal DNA methylation libraries (IDOL). BMC bioinformatics. 17, 120. doi: 10.1186/s12859-016-0943-7 FlowSorted.Blood.EPIC LE Reinius et al. (2012). Differential DNA methylation purified human blood cells: implications cell lineage studies disease susceptibility. PloS one. 7(7), e41361. doi: 10.1371/journal.pone.0041361 FlowSorted.Blood.450k K Gervin et al. (2019). Systematic evaluation validation reference library selection methods deconvolution cord blood DNA methylation data. Clinical epigenetics. 11, 1-15. doi: 10.1186/s13148-019-0717-y FlowSorted.CordBlood.450k LY Middleton et al. (2022). Saliva cell type DNA methylation reference panel epidemiological studies children. Epigenetics, 17(2), 161-177. doi: 10.1371/journal.pone.0041361 BeadSorted.Saliva.EPIC J Guintivano et al. (2013). cell epigenotype specific model correction brain cellular heterogeneity bias application age, brain region major depression. Epigenetics, 8(3), 290-302. doi: 10.4161/epi.23924 FlowSorted.DLPFC.450k figure focused optimization deconvolution pipeline blood tissue. four main steps cellular deconvolution reference selection, data normalization, feature selection, regression. function calls step bolded left, detail function described Usage section. CellsPickMe Pipeline, created BioRender.com","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"cell-type-deconvolution","dir":"Articles","previous_headings":"","what":"Cell Type Deconvolution","title":"CellsPickMe","text":"addition improved methods feature selection optimize prediction process, package also includes several features assess prediction accuracy. CellsPickMe package includes 5 core functions: getRef() finds load tissue-specific reference data set combData()combines reference user’s sample data sets together pickProbes() picks features best distinguish cell types (multiple feature selection methods available) clusterScore() assesses performance selected features clustering cell types reference predictCT() estimate cell type proportions based selected probes, ability evaluate pickProbes() function can computationally intensive, depending methods feature selection. Parallel computing available highly recommended improved efficiency. Detailed usage available following data required performing cell type proportion prediction CellsPickMe: - DNAme data (RGChannelSet Object recommended, beta matrix accepted well) * appropriate reference can obtained getRef() function. Otherwise user can specify reference dataset well (needs RGChannelSet Object CellTypes information pData)","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"installation","dir":"Articles","previous_headings":"Cell Type Deconvolution","what":"Installation","title":"CellsPickMe","text":"","code":"library(devtools) devtools::install_github(\"maggie-fu/CellsPickMe\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"usage","dir":"Articles","previous_headings":"Cell Type Deconvolution","what":"Usage","title":"CellsPickMe","text":"CellsPickMe package takes DNA methylation data generated Illumina microarray predict cellular composition based cell types available reference profiles. Currently, algorithm compatible peripheral blood, cord blood, saliva, brain (neuron vs non-neuron).","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"obtain-reference-dataset","dir":"Articles","previous_headings":"Cell Type Deconvolution > Usage","what":"Obtain reference dataset","title":"CellsPickMe","text":"available list reference datasets (“Reinius”, “IDOL”, “Extended”, “Cord”, “UniBlood7”, “UniBlood13”, “UniBlood19”, “DLPFC”, “Middleton”), select one appropriate sample (based tissue sample age)","code":"library(CellsPickMe)  # Request the UniBlood19 reference with no normalization ref_dat <- getRef(ref = \"IDOL\", normType = \"None\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"normalize-sample-and-reference-datasets-together","dir":"Articles","previous_headings":"Cell Type Deconvolution > Usage","what":"Normalize sample and reference datasets together","title":"CellsPickMe","text":"Normalize user’s sample reference data sets together reduce batch effect improve prediction accuracy. Option normType includes “Noob”, “Funnorm”, “Quantile”, “Quantile.b”, “None”, first 3 options exclusively RGChannelSet objects, Quantile.b beta matrix.","code":"# Load example blood cell mixture, subsetted from the IDOL dataset (GSE110554) test_dat <- CellsPickMe::IDOL_mixed_cells   # Combine sample and reference data sets together, followed by normalization (if selected) comb_dat <- combData(dataset = test_dat,                       reference = ref_dat$reference,                       cellTypes = ref_dat$cellTypes,                       class = \"rgset\",               #c(\"rgset\", \"betas\")                      normType = \"None\")             # c(\"Noob\", \"Funnorm\", \"Quantile\", \"Quantile.b\", \"None\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"pick-features-that-best-distinguish-cell-type","dir":"Articles","previous_headings":"Cell Type Deconvolution > Usage","what":"Pick features that best distinguish cell type","title":"CellsPickMe","text":"CellsPickMe package supports feature selection either traditional T-test, machine-learning-based methods elastic net random forest obtain curated list features highly predictive cell types. Method ID caretMods argument","code":"# Pick probes with T tests probes <- pickProbes(dataNormed = comb_dat,                       probeList = \"Ttest\", #c(\"Ttest\", \"Caret_CV\", \"Caret_LOOCV\", \"IDOL\")                      probeSelect = \"both\", #c(\"both\", \"any\")                      nProbes = 100, # number of probes to pick for each cell type                      p.val = 0.05,  # max pval                      min.delta.beta = 0.05, # min delta beta                      plotRef = T, # plot heatmap?                      verbose = T)  ### Set up server for parallelization - run the code if picking probes with Caret library(doParallel) cl <- makeCluster(detectCores() - 1) # change as needed registerDoParallel(cl)  # Pick probes with repeated cross validation with lasso and elastic net probes <- pickProbes(dataNormed = comb_dat,                       probeList = \"Caret_LOOCV\", #c(\"Ttest\", \"Caret_CV\", \"Caret_LOOCV\", \"IDOL\")                      caretMods = c(\"lasso\", \"EN\"),  #c(\"lasso\", \"EN\", \"BLR\", \"CART\", \"RF\", \"GBM\")                      filterK = 1000, # number of probes to put into the predictor for each cell type                      seed = 1,                       plotRef = F, # plot heatmap?                      verbose = F)  # FilterK results used as input for feature selection head(probes$coefs$probeList$CD8T$tTestTopK)  # Picked probes with EN and the estimated coefficients head(probes$coefs$probeCoefs$EN)  # Picked probes with EN for each cell type and the cross validation performance  head(probes$coefs$probeList$CD8mem$EN$coefs)"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"assess-clustering-stability","dir":"Articles","previous_headings":"Cell Type Deconvolution > Usage","what":"Assess clustering stability","title":"CellsPickMe","text":"evaluate performance selected probes, pvClust can applied assess whether picked probes can used generate correct cluster (cell type labeling) reference data","code":"clustAU <- identClust(dataNormed = comb_dat,                       probes = probes,                       parallel = TRUE)"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"estimate-cell-type-proportion","dir":"Articles","previous_headings":"Cell Type Deconvolution > Usage","what":"Estimate cell type proportion","title":"CellsPickMe","text":"Finally, selected features used estimate cell type proportions sample data set. also incorporate CETYGO score (see Reference) estimate prediction performance even absence validation cohort / ground truth cell count.","code":"out <- predictCT(dataNormed = comb_dat,                   probes = probes,                   method = \"CP\",  #c(\"CP\", \"RPC\", \"SVR\")                  removenRBC = F, # remove nRBC?                  verbose = T,                   cetygo = T) # CETYGO to assess reference appropriateness (RMSE evaluation)"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"citation","dir":"Articles","previous_headings":"Cell Type Deconvolution","what":"Citation","title":"CellsPickMe","text":"manuscript detailing CellsPickMe use currently preparation. information please contact Maggie Fu maggie.fu@bcchr.ca.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/CellsPickMe.html","id":"references","dir":"Articles","previous_headings":"Cell Type Deconvolution","what":"References","title":"CellsPickMe","text":"Depending options used, please consider citing following references package built data / code / papers. DS Vellame et al. (2023). Uncertainty quantification reference-based cellular deconvolution algorithms. Epigenetics 18, 1: 2137659. doi: 10.1080/15592294.2022.2137659 Please cite paper set parameter cetygo = T predictCT() LE Reinius et al. (2012). Differential DNA methylation purified human blood cells: implications cell lineage studies disease susceptibility. PloS one. 7(7), e41361. doi: 10.1371/journal.pone.0041361 Please cite paper used reference dataset, .e. getRef(ref = \"Reinius\") DC Koestler et al. (2016). Improving cell mixture deconvolution identifying optimal DNA methylation libraries (IDOL). BMC bioinformatics. 17, 120. doi: 10.1186/s12859-016-0943-7 Please cite paper used reference dataset, .e. getRef(ref = \"IDOL\") LA Salas et al. (2022) Enhanced cell deconvolution peripheral blood using DNA methylation high-resolution immune profiling. Nat Commun. 13, 761. doi: 10.1038/s41467-021-27864-7 Please cite paper used reference dataset, .e. getRef(ref = \"Extended\") K Gervin et al. (2019). Systematic evaluation validation reference library selection methods deconvolution cord blood DNA methylation data. Clinical epigenetics. 11, 1-15. doi: 10.1186/s13148-019-0717-y Please cite paper used reference dataset, .e. getRef(ref = \"Cord\") LY Middleton et al. (2022). Saliva cell type DNA methylation reference panel epidemiological studies children. Epigenetics, 17(2), 161-177. doi: 10.1371/journal.pone.0041361 Please cite paper used reference dataset, .e. getRef(ref = \"Middleton\") J Guintivano et al. (2013). cell epigenotype specific model correction brain cellular heterogeneity bias application age, brain region major depression. Epigenetics, 8(3), 290-302. doi: 10.4161/epi.23924 Please cite paper used reference dataset, .e. getRef(ref = \"DLPFC\") TJ Triche, et al. (2013). Low-level processing Illumina Infinium DNA Methylation BeadArrays. Nucleic Acids Res. 41, e90. doi: 10.1093/nar/gkt090. Please cite paper used normalization method, .e. getRef(normType = \"Noob\") combData(normType = \"Noob\") JP Fortin et al. (2014). Functional normalization 450k methylation array data improves replication large cancer studies. Genome Biology 15, 503. doi: 10.1186/s13059-014-0503-2. Please cite paper used normalization method, .e. getRef(normType = \"Funnorm\") combData(normType = \"Funnorm\") N Touleimat J Tost. (2012). Complete pipeline Infinium Human Methylation 450K BeadChip data processing using subset quantile normalization accurate DNA methylation estimation. Epigenomics 4, 325-341. doi: 10.2217/epi.12.21 Please cite paper used normalization method, .e. getRef(normType = \"Quantile\") combData(normType = \"Quantile\")","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/UniBlood_references.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"UniBlood Reference Creation","text":"readme documents creation process UniBlood sorted cell DNAme references used CellsPickMe R package. package deconvolute cellular composition cord, pediatric, adult blood samples based DNA methylation (DNAme) profile, measured Illumina methylation arrays (compatible HM450k, EPICv1, EPICv2)","code":"library(ExperimentHub) library(minfi) library(dplyr) library(ggplot2)"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/UniBlood_references.html","id":"uniblood-references","dir":"Articles","previous_headings":"","what":"UniBlood references","title":"UniBlood Reference Creation","text":"UniBlood references, including UniBlood7, UniBlood13, UniBlood19, generated based combining preexisting cord blood adult blood-based references. combining sorted cells’ DNAme two distinct developmental time points, aimed capture cell-type-specific signals account changes hematopoietic landscape. composition UniBlood references shown Table 1. Table 1. Cellular composition dataset included three reference datasets compiled study, UniBlood7, UniBlood13, UniBlood19. UniBlood7 UniBlood13 UniBlood19","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/UniBlood_references.html","id":"load-existing-reference-datasets","dir":"Articles","previous_headings":"UniBlood references","what":"Load existing reference datasets","title":"UniBlood Reference Creation","text":"","code":"hub <- ExperimentHub()  ### Extended reference query(hub, \"FlowSorted.BloodExtended.EPIC\")   FlowSorted.BloodExtended.EPIC <- hub[[\"EH5425\"]] n FlowSorted.BloodExtended.EPIC <- FlowSorted.BloodExtended.EPIC[, FlowSorted.BloodExtended.EPIC$Sample_Group != \"FlowSorted.Blood.EPIC\"] meta_1 <- pData(FlowSorted.BloodExtended.EPIC) meta_1 <- meta_1[, c(\"Sex\", \"Age\", \"CellType\", \"Ethnicity_wide\", \"purity\")] meta_1$Ref <- \"Extended\"  ### IDOL reference FlowSorted.Blood.EPIC <- FlowSorted.Blood.EPIC::libraryDataGet('FlowSorted.Blood.EPIC') meta_2 <- pData(FlowSorted.Blood.EPIC) meta_2 <- meta_2[, c(\"Sex\", \"Age\", \"CellType\", \"Ethnicity_wide\", \"purity\")] meta_2$Ref <- \"IDOL\"  ### Cord reference FlowSorted.CordBlood.450k <- FlowSorted.CordBloodCombined.450k::libraryDataGet('FlowSorted.CordBloodCombined.450k') meta_3 <- pData(FlowSorted.CordBlood.450k) meta_3 <- meta_3[, c(\"Sex\", \"Age\", \"CellType\")] %>% cbind(., Ethnicity_wide = NA, purity = NA) meta_3$Ref <- \"Cord\"  ### Reinius library(FlowSorted.Blood.450k) data(\"FlowSorted.Blood.450k\") meta_4 <- pData(FlowSorted.Blood.450k) meta_4 <- meta_4[, c(\"Sex\", \"CellType\")] %>% cbind(., Age = NA, Ethnicity_wide = NA, purity = NA) meta_4$Ref <- \"Reinius\""},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/UniBlood_references.html","id":"uniblood7","dir":"Articles","previous_headings":"","what":"UniBlood7","title":"UniBlood Reference Creation","text":"UniBlood7 includes Reinius, Cord, IDOL references. 7 cell types, reference treat neonatal adult cells identity (e.g. CD4T cells) one cell type.","code":"Ref_meta <- do.call(rbind, list(meta_2, meta_3, meta_4))  # Combine reference datasets UniBlood7 <- combineArrays(FlowSorted.Blood.450k,                             FlowSorted.Blood.EPIC,                             outType = \"IlluminaHumanMethylation450k\") UniBlood7 <- combineArrays(UniBlood7,                             FlowSorted.CordBlood.450k,                             outType = \"IlluminaHumanMethylation450k\")  UniBlood7_meta <- Ref_meta[sampleNames(UniBlood7), ] pData(UniBlood7) <- UniBlood7_meta  save(UniBlood7, compression_level = 9, file = \"data/UniBlood7.rda\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/UniBlood_references.html","id":"uniblood13","dir":"Articles","previous_headings":"","what":"UniBlood13","title":"UniBlood Reference Creation","text":"UniBlood13 mostly built Extended reference, additional samples IDOL reference nRBCs Cord reference. 13 cell types, reference assumes neonatal adult cells share similar DNAme profiles except nRBCs, exist neonatal time point.","code":"Ref_meta <- do.call(rbind, list(meta_1, meta_2, meta_3))  # Select samples to exclude from cord blood samples based on odd clustering from PCA samp_IDOL <- rownames(meta_2)[meta_2$CellType %in% c(\"Mono\", \"Neu\", \"NK\")]  samp_Extended <- rownames(meta_1)[meta_1$CellType != \"MIX\"]  FlowSorted.CordBlood.nRBC <- FlowSorted.CordBlood.450k[, meta_3$CellType == \"nRBC\"]  # Combine reference datasets UniBlood13 <- combineArrays(FlowSorted.BloodExtended.EPIC[, samp_Extended],                              FlowSorted.Blood.EPIC[, samp_IDOL],                              outType = \"IlluminaHumanMethylationEPIC\") UniBlood13 <- combineArrays(UniBlood13,                              FlowSorted.CordBlood.nRBC,                              outType = \"IlluminaHumanMethylation450k\")  UniBlood13_meta <- Ref_meta[sampleNames(UniBlood13), ] pData(UniBlood13) <- UniBlood13_meta  save(UniBlood13, compression_level = 9, file = \"data/UniBlood13.rda\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/articles/UniBlood_references.html","id":"uniblood19","dir":"Articles","previous_headings":"","what":"UniBlood19","title":"UniBlood Reference Creation","text":"Finally, UniBlood19 reference cell types. combines reference datasets Extended, Cord, IDOL. reference treated neonatal adult cells distinct identities, cord blood cells labelled “_cord” suffix.","code":"Ref_meta <- do.call(rbind, list(meta_1, meta_2, meta_3))  # Select samples to exclude from cord blood samples based on odd clustering from PCA out <- c(\"X3999492113_R01C01\",           \"X3999492113_R06C02\",           \"X3999997142_R02C02\",           \"X3999984059_R01C02\",           \"X3999492043_R06C01\",           \"X3999984058_R06C01\",           \"X201868590206_R06C01\",           \"3999492043_R06C01\",           \"3999984058_R06C01\",           \"200705360101_R04C01\",           \"Gran_4\",           \"Gran_5\",           \"200705360089_R06C01\",           \"200705360058_R07C01\",           \"200693480131_R02C01\",           \"3999984059_R04C02\",           \"200705360013_R06C01\",           \"200705360068_R02C01\",           \"3999492113_R01C01\",           \"CD8+_6\",           \"200705360060_R06C01\",           \"3999997142_R03C01\",          \"200693480078_R02C01\")  Ref_meta <- Ref_meta[!rownames(Ref_meta) %in% out, ]  set.seed(1234) samp_Cord <- sapply(c(\"CD4T\", \"NK\", \"nRBC\", \"Bcell\", \"Mono\", \"Gran\", \"CD8T\", \"WBC\"), function(x){     sample(rownames(Ref_meta)[Ref_meta$CellType == x & Ref_meta$Ref == \"Cord\"], size = 10) }) %>% as.vector()  samp_IDOL <- rownames(meta_2)[meta_2$CellType %in% c(\"Mono\", \"Neu\", \"NK\")]  samp_Extended <- rownames(meta_1)#[meta_1$CellType != \"MIX\"]  # Rename cord blood cells Ref_meta$CellType[Ref_meta$Ref == \"Cord\"] <- paste0(Ref_meta$CellType[Ref_meta$Ref == \"Cord\"], \"_cord\") %>%     gsub(\"nRBC_cord\", \"nRBC\", .)  # Combine reference datasets UniBlood19 <- combineArrays(FlowSorted.BloodExtended.EPIC[, samp_Extended],                              FlowSorted.Blood.EPIC[, samp_IDOL],                              outType = \"IlluminaHumanMethylationEPIC\") UniBlood19 <- combineArrays(UniBlood19,                              FlowSorted.CordBlood.450k[, samp_Cord],                              outType = \"IlluminaHumanMethylation450k\")  UniBlood19_meta <- Ref_meta[sampleNames(UniBlood19), ] pData(UniBlood19) <- UniBlood19_meta  save(UniBlood19, compression_level = 9, file = \"data/UniBlood19.rda\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maggie Fu. Author, maintainer.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu M (2025). CellsPickMe: Predict cell type proportion based DNA methylation data. R package version 1.0.0, https://maggie-fu.github.io/CellsPickMe/.","code":"@Manual{,   title = {CellsPickMe: Predict cell type proportion based on DNA methylation data},   author = {Maggie Fu},   year = {2025},   note = {R package version 1.0.0},   url = {https://maggie-fu.github.io/CellsPickMe/}, }"},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"cellspickme","dir":"","previous_headings":"","what":"Predict cell type proportion based on DNA methylation data","title":"Predict cell type proportion based on DNA methylation data","text":"CellsPickMe package takes DNA methylation (DNAme) data generated Illumina microarray heterogeneous tissue predict cellular composition based cell types available reference profiles. Notably, population cells, package “picks” DNAme features best predict cellular identities machine learning algorithms improve deconvolution performance. Currently, algorithm compatible peripheral blood, cord blood, saliva, brain (neuron vs non-neuron).","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Predict cell type proportion based on DNA methylation data","text":"can install development version CellsPickMe GitHub :","code":"# install.packages(\"devtools\") library(devtools) devtools::install_github(\"maggie-fu/CellsPickMe\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Predict cell type proportion based on DNA methylation data","text":"Reference-based cell type deconvolution includes four steps: reference dataset selection, data normalization, feature selection, cell composition regression.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"id_1-obtain-reference-dataset","dir":"","previous_headings":"Usage","what":"1. Obtain reference dataset","title":"Predict cell type proportion based on DNA methylation data","text":"available list reference datasets (“Reinius”, “IDOL”, “Extended”, “UniBlood7”, “UniBlood13”, “UniBlood19”, “Cord”, “DLPFC”, “Middleton”), select one appropriate sample (based tissue sample age) detail regarding references, check vignette UniBlood Reference Generation page","code":"library(CellsPickMe)  # Request the IDOL reference (2016) with no normalization ref_dat <- getRef(ref = \"UniBlood19\", normType = \"None\")"},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"id_2-normalize-sample-and-reference-datasets-together","dir":"","previous_headings":"Usage","what":"2. Normalize sample and reference datasets together","title":"Predict cell type proportion based on DNA methylation data","text":"Normalize user’s sample reference data sets together reduce batch effect improve prediction accuracy. Option normType includes “Noob”, “Funnorm”, “Quantile”, “Quantile.b”, “None”, first 3 options exclusively RGChannelSet objects, Quantile.b beta matrix.","code":"# Load example blood cell mixture, subsetted from the IDOL dataset (GSE110554) test_dat <- CellsPickMe::IDOL_mixed_cells      # Combine sample and reference data sets together, followed by normalization (if selected) comb_dat <- combData(dataset = test_dat,                       reference = ref_dat$reference,                      cellTypes = ref_dat$cellTypes,                       class = \"rgset\",               #c(\"rgset\", \"betas\")                      normType = \"Quantile\")         # c(\"Noob\", \"Funnorm\", \"Quantile\", \"Quantile.b\", \"None\") #> Combining Data with Flow Sorted Data and Normalizing."},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"id_3-pick-features-that-best-distinguish-cell-type","dir":"","previous_headings":"Usage","what":"3. Pick features that best distinguish cell type","title":"Predict cell type proportion based on DNA methylation data","text":"CellsPickMe package supports feature selection either traditional T-test, machine-learning-based methods elastic net random forest obtain curated list features highly predictive cell types T-test based feature selection method.  Alternatively, options machine-learning-based feature selection.","code":"# Pick probes with T tests probes <- pickProbes(dataNormed = comb_dat,                       probeList = \"Ttest\", #c(\"Ttest\", \"IDOL\")                      probeSelect = \"both\", #c(\"both\", \"any\", \"pval\")                      nProbes = 100, # number of probes to pick for each cell type                      p.val = 0.05,  # max pval                      min.delta.beta = 0.05, # min delta beta                      plotRef = T, # plot heatmap?                      verbose = T) #> Estimating Weights for Cell Type Prediction Based on Selected Probeset. ### Set up server for parallelization - run the code if picking probes with Caret library(doParallel) cl <- makeCluster(detectCores() - 1) # change as needed registerDoParallel(cl)  # Pick probes with repeated cross validation with lasso and elastic net (EN) probes <- pickProbes(dataNormed = comb_dat,                       probeList = \"Caret_CV\", #c(\"Caret_CV\", \"Caret_LOOCV\")                      caretMods = c(\"RF\", \"EN\"),  #c(\"lasso\", \"EN\", \"BLR\", \"CART\", \"RF\", \"GBM\", \"PLDA\", \"GAnRF\", \"GAnNB\", \"GAnSVM\", \"GAnNN\")                      probeSelect = \"any\",                      p.val = 1,                       min.delta.beta = 0,                      filterK = 1000, # number of probes to put into the predictor for each cell type                      seed = 1,                       plotRef = F, # plot heatmap?                      verbose = F)  # Picked probes with RF and the estimated coefficients head(probes$coefs$probeCoefs$RF) #>            Bcell_cord      Bmem       Bnv CD8T_cord    CD8mem     CD8nv #> cg24262870  0.1235089 0.7885589 0.1454030 0.7988769 0.9002228 0.8815243 #> cg24667756  0.1468955 0.3246588 0.1774464 0.8213872 0.8656461 0.8369870 #> cg21531416  0.1954677 0.7161480 0.2611708 0.6352860 0.9123706 0.8243531 #> cg27436324  0.2643973 0.7655840 0.2042478 0.8774527 0.9099452 0.8940336 #> cg18406792  0.1745236 0.4272825 0.1660204 0.8060743 0.8471631 0.8077735 #> cg15198193  0.1576836 0.7751659 0.4488992 0.6089112 0.8850735 0.6163415 #>            CD4T_cord    CD4mem     CD4nv      Treg Gran_cord       Bas #> cg24262870 0.6986202 0.8848730 0.8628457 0.8774487 0.8433450 0.8428693 #> cg24667756 0.8015645 0.8815034 0.8414196 0.8673486 0.8545976 0.8684859 #> cg21531416 0.8386425 0.9126800 0.8887243 0.9108057 0.7946011 0.8733178 #> cg27436324 0.8877283 0.9060499 0.8918332 0.9088491 0.9053751 0.9017803 #> cg18406792 0.8015001 0.8518648 0.8016774 0.8430231 0.8296527 0.8415291 #> cg15198193 0.4571046 0.8280606 0.4386012 0.8255160 0.8851114 0.8909355 #>                  Eos       Neu Mono_cord      Mono   NK_cord        NK #> cg24262870 0.8384348 0.8475652 0.8450575 0.8577191 0.8034451 0.8599368 #> cg24667756 0.8734111 0.8663822 0.8567890 0.8722139 0.7773920 0.8388949 #> cg21531416 0.8870945 0.8667716 0.7915671 0.8902495 0.8265656 0.8828000 #> cg27436324 0.9044173 0.9059902 0.9076917 0.9014642 0.8858523 0.8931943 #> cg18406792 0.8097433 0.8522817 0.8409429 0.8522421 0.7989837 0.8274087 #> cg15198193 0.8939239 0.9035070 0.8632832 0.8930117 0.7029587 0.7756338 #>                 nRBC #> cg24262870 0.7149653 #> cg24667756 0.8298977 #> cg21531416 0.8788950 #> cg27436324 0.9048735 #> cg18406792 0.7034571 #> cg15198193 0.8892714"},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"assess-clustering-stability","dir":"","previous_headings":"Usage > 3. Pick features that best distinguish cell type","what":"Assess clustering stability","title":"Predict cell type proportion based on DNA methylation data","text":"evaluate performance selected probes, pvClust can applied assess whether picked probes can used generate correct cluster (cell type labeling) reference data","code":"clustAU <- identClust(dataNormed = comb_dat,                       probes = probes,                       parallel = TRUE) #> Creating a temporary cluster...done: #> socket cluster with 15 nodes on host 'localhost' #> Multiscale bootstrap... Done. #> Creating a temporary cluster...done: #> socket cluster with 15 nodes on host 'localhost' #> Multiscale bootstrap... Done."},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"id_4-estimate-cell-type-proportion","dir":"","previous_headings":"Usage","what":"4. Estimate cell type proportion","title":"Predict cell type proportion based on DNA methylation data","text":"Finally, selected features used estimate cell type proportions sample data set. also incorporate CETYGO score (see Reference) estimate prediction performance even absence validation cohort / ground truth cell count.","code":"out <- predictCT(dataNormed = comb_dat,                   probes = probes,                   method = \"CP\",  #c(\"CP\", \"RPC\", \"SVR\")                  removenRBC = F, # remove nRBC?                  verbose = F,                   cetygo = T) # CETYGO to assess reference appropriateness (RMSE evaluation)"},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"examine-output","dir":"","previous_headings":"Usage","what":"Examine output","title":"Predict cell type proportion based on DNA methylation data","text":"","code":"# Estimated proportions based on UniBlood19 reference, Quantile normalization, RF feature selection, and constraint projection # CETYOGO score column shows the CETYGO score for each sample head(out$RF) #>                        Bcell_cord        Bmem          Bnv     CD8T_cord #> 201868590193_R01C01  4.900574e-03 0.033452481 1.379462e-01  1.514549e-17 #> 201868590243_R02C01  3.651905e-18 0.003854140 2.263836e-02  1.437579e-17 #> 201868590267_R01C01  8.517287e-19 0.001492958 7.777743e-03  9.612166e-18 #> 201868590267_R05C01 -4.750408e-19 0.000000000 8.474686e-19 -5.644007e-18 #> 201869680008_R01C01 -8.604787e-18 0.016948846 4.167371e-02 -2.885869e-18 #> 201869680008_R03C01  4.207191e-18 0.001690919 1.916507e-04  1.366324e-17 #>                         CD8mem      CD8nv   CD4T_cord     CD4mem        CD4nv #> 201868590193_R01C01 0.09173997 0.10524220 0.003926924 0.03872764 0.0000000000 #> 201868590243_R02C01 0.01850916 0.05208359 0.029338138 0.07047455 0.0200054165 #> 201868590267_R01C01 0.02684480 0.05160417 0.016167004 0.05741796 0.0005965834 #> 201868590267_R05C01 0.04888686 0.09128600 0.031025712 0.09102361 0.0067783757 #> 201869680008_R01C01 0.12561960 0.16432521 0.033519080 0.08303561 0.0020908658 #> 201869680008_R03C01 0.03353352 0.07468721 0.021948900 0.07435698 0.0093463515 #>                            Treg     Gran_cord           Bas           Eos #> 201868590193_R01C01 0.001226282 -9.632261e-18  1.724723e-18 -3.909634e-18 #> 201868590243_R02C01 0.019797856 -2.398769e-17  1.834631e-18  0.000000e+00 #> 201868590267_R01C01 0.008459640 -1.141656e-17 -2.596394e-18  1.631795e-18 #> 201868590267_R05C01 0.014504984 -3.927637e-17  1.718343e-18  1.459127e-19 #> 201869680008_R01C01 0.015657041 -3.078488e-17 -7.265285e-19  0.000000e+00 #> 201869680008_R03C01 0.015005326 -1.206880e-17  2.004191e-18  0.000000e+00 #>                           Neu     Mono_cord       Mono       NK_cord #> 201868590193_R01C01 0.2342231  2.738654e-19 0.20168628 -1.682621e-17 #> 201868590243_R02C01 0.7117166  5.758737e-18 0.04418971 -1.019774e-17 #> 201868590267_R01C01 0.7336139 -2.737916e-18 0.09906315 -1.600910e-18 #> 201868590267_R05C01 0.6399841 -1.116955e-18 0.06725238  2.389558e-17 #> 201869680008_R01C01 0.1218932  1.143990e-18 0.24001386 -8.338604e-18 #> 201869680008_R03C01 0.6862866  7.171603e-18 0.05876430 -1.070111e-17 #>                               NK          nRBC     CETYGO #> 201868590193_R01C01 1.498043e-01  4.923736e-19 0.03460435 #> 201868590243_R02C01 8.779442e-03 -7.450351e-19 0.03319760 #> 201868590267_R01C01 2.421607e-18  8.673617e-19 0.03196155 #> 201868590267_R05C01 1.026174e-02 -1.487835e-18 0.03414952 #> 201869680008_R01C01 1.568069e-01 -1.228120e-18 0.03585871 #> 201869680008_R03C01 2.326621e-02 -8.343516e-19 0.03310038  # Basic visualization of deconvolution output library(ggplot2) library(dplyr) library(reshape2)  plt <- out$RF[, ref_dat$cellTypes] %>%     as.data.frame(.) %>%      reshape2::melt() ggplot(plt, aes(variable, value, color = variable)) +      geom_boxplot() +      geom_point(size = 2, position = position_jitter()) +      theme_bw() +      labs(x = \"cell type\",           y = \"cell type proportion (%)\",           title = \"Blood cell type proportion\") +     scale_color_manual(values = c(Bcell_cord = \"#9C9EDEFF\",                                    Bnv = \"#7375B5FF\",                                    Bmem = \"#4A5584FF\",                                    Bcell = \"#7375B5FF\",                                   CD4T_cord = \"#CEDB9CFF\",                                    CD4nv = \"#B5CF6BFF\",                                    CD4mem = \"#637939FF\",                                    Treg = \"#8CA252FF\",                                    CD4T = \"#B5CF6BFF\",                                   CD8T_cord = \"#E7CB94FF\",                                    CD8nv = \"#E7BA52FF\",                                    CD8mem = \"#8C6D31FF\",                                    CD8T = \"#E7BA52FF\",                                   NK_cord = \"#7BBCB0FF\",                                    NK = \"#3A7C89FF\",                                    Mono_cord = \"#F3CBD3FF\",                                    Mono = \"#707070\",                                   Gran_cord = \"#D39C83FF\",                                    Gran = \"#A65461FF\",                                    Neu = \"#A65461FF\",                                    Bas = \"#7B4173FF\",                                   Eos = \"#A55194FF\",                                    nRBC = \"#843C39FF\")) +     theme(axis.text.x = element_text(angle = 45, vjust = 0.9, hjust = 1))"},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Predict cell type proportion based on DNA methylation data","text":"manuscript detailing CellsPickMe use currently preparation. information please contact Maggie Fu maggie.fu@bcchr.ca.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Predict cell type proportion based on DNA methylation data","text":"Depending options used, please consider citing following references package built data / code / papers. DS Vellame et al. (2023). Uncertainty quantification reference-based cellular deconvolution algorithms. Epigenetics 18, 1: 2137659. doi: 10.1080/15592294.2022.2137659 Please cite paper set parameter cetygo = T predictCT() LE Reinius et al. (2012). Differential DNA methylation purified human blood cells: implications cell lineage studies disease susceptibility. PloS one. 7(7), e41361. doi: 10.1371/journal.pone.0041361 Please cite paper used reference dataset, .e. getRef(ref = \"Reinius\") DC Koestler et al. (2016). Improving cell mixture deconvolution identifying optimal DNA methylation libraries (IDOL). BMC bioinformatics. 17, 120. doi: 10.1186/s12859-016-0943-7 Please cite paper used reference dataset, .e. getRef(ref = \"IDOL\") LA Salas et al. (2022) Enhanced cell deconvolution peripheral blood using DNA methylation high-resolution immune profiling. Nat Commun. 13, 761. doi: 10.1038/s41467-021-27864-7 Please cite paper used reference dataset, .e. getRef(ref = \"Extended\") K Gervin et al. (2019). Systematic evaluation validation reference library selection methods deconvolution cord blood DNA methylation data. Clinical epigenetics. 11, 1-15. doi: 10.1186/s13148-019-0717-y Please cite paper used reference dataset, .e. getRef(ref = \"Cord\") LY Middleton et al. (2022). Saliva cell type DNA methylation reference panel epidemiological studies children. Epigenetics, 17(2), 161-177. doi: 10.1371/journal.pone.0041361 Please cite paper used reference dataset, .e. getRef(ref = \"Middleton\") J Guintivano et al. (2013). cell epigenotype specific model correction brain cellular heterogeneity bias application age, brain region major depression. Epigenetics, 8(3), 290-302. doi: 10.4161/epi.23924 Please cite paper used reference dataset, .e. getRef(ref = \"DLPFC\") TJ Triche, et al. (2013). Low-level processing Illumina Infinium DNA Methylation BeadArrays. Nucleic Acids Res. 41, e90. doi: 10.1093/nar/gkt090. Please cite paper used normalization method, .e. getRef(normType = \"Noob\") combData(normType = \"Noob\") JP Fortin et al. (2014). Functional normalization 450k methylation array data improves replication large cancer studies. Genome Biology 15, 503. doi: 10.1186/s13059-014-0503-2. Please cite paper used normalization method, .e. getRef(normType = \"Funnorm\") combData(normType = \"Funnorm\") N Touleimat J Tost. (2012). Complete pipeline Infinium Human Methylation 450K BeadChip data processing using subset quantile normalization accurate DNA methylation estimation. Epigenomics 4, 325-341. doi: 10.2217/epi.12.21 Please cite paper used normalization method, .e. getRef(normType = \"Quantile\") combData(normType = \"Quantile\")","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/IDOL_mixed_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"IDOL mixed blood cell DNA methylation — IDOL_mixed_cells","title":"IDOL mixed blood cell DNA methylation — IDOL_mixed_cells","text":"subset data GSE110554","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/IDOL_mixed_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IDOL mixed blood cell DNA methylation — IDOL_mixed_cells","text":"","code":"IDOL_mixed_cells"},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/IDOL_mixed_cells.html","id":"","dir":"Reference","previous_headings":"","what":"IDOL mixed blood cell DNA methylation — IDOL_mixed_cells","title":"IDOL mixed blood cell DNA methylation — IDOL_mixed_cells","text":"RGChannelSet 1,051,815 rows 12 columns DNA methylation data set artificially combined blood cell mixture, measured Illumina's EPIC microarray. data represents averaged DNA methylation level blood cell mixture. data extracted GSE110554, dataset created published Salas et al. Please cite following using data. Salas LA, Koestler DC, Butler RA, Hansen HM et al. optimized library reference-based deconvolution whole-blood biospecimens assayed using Illumina HumanMethylationEPIC BeadArray. Genome Biol 2018 May 29;19(1):64. PMID: 29843789","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/IDOL_mixed_cells.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IDOL mixed blood cell DNA methylation — IDOL_mixed_cells","text":"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE110554","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/Middleton_pd.html","id":null,"dir":"Reference","previous_headings":"","what":"Middleton et al. Saliva reference pheno data — Middleton_pd","title":"Middleton et al. Saliva reference pheno data — Middleton_pd","text":"phenotype data GSE147318","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/Middleton_pd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middleton et al. Saliva reference pheno data — Middleton_pd","text":"","code":"Middleton_pd"},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/Middleton_pd.html","id":"","dir":"Reference","previous_headings":"","what":"Middleton et al. Saliva reference pheno data — Middleton_pd","title":"Middleton et al. Saliva reference pheno data — Middleton_pd","text":"dataframe 60 rows 1 column data contains cell type label Middleton saliva reference, allowing usability getRef() function Middleton reference called. data extracted GSE147318, dataset created published Middleton et al. Please cite following using data. Middleton LYM, Dou J, Fisher J, Heiss JA et al. Saliva cell type DNA methylation reference panel epidemiological studies children. Epigenetics 2022 Jan-Feb;17(2):161-177. PMID: 33588693","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/Middleton_pd.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Middleton et al. Saliva reference pheno data — Middleton_pd","text":"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE147318","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/combData.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine reference and user's sample data sets together — combData","title":"Combine reference and user's sample data sets together — combData","text":"Combine reference user's sample data sets together","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/combData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine reference and user's sample data sets together — combData","text":"","code":"combData(   dataset,   reference,   class = c(\"rgset\", \"betas\"),   normType = c(\"Noob\", \"Funnorm\", \"Quantile\", \"Quantile.b\", \"None\"),   cellTypes = c(\"Bas\", \"Bmem\", \"Bnv\", \"CD4mem\", \"CD4nv\", \"CD8mem\", \"CD8nv\", \"Eos\",     \"Mono\", \"Neu\", \"NK\", \"Treg\"),   verbose = TRUE )"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/combData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine reference and user's sample data sets together — combData","text":"dataset RGchannelSet beta matrix users' DNA methylation data set reference RGchannelSet reference DNA methylation data set, preferentially output getRef() function, ensure pData() formatting appropriate class character specifying argument dataset's class, option rgset (RGChannelSet) betas (beta matrix) normType character specifying method normalizing user sample reference data sets together, options \"Noob\", \"Funnorm\", \"Quantile\", \"Quantile.b\", \"None\" – refer Details section information options. cellTypes vector characters specifying cell types estimated. getRef() function used, use output shown Example. verbose Boolean, specifying whether function verbose","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/combData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine reference and user's sample data sets together — combData","text":"list dataframes, including sample reference data post normalization, pheno data, cell type information","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/combData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine reference and user's sample data sets together — combData","text":"","code":"# Load example blood cell mixture, subsetted from the IDOL dataset (GSE110554) test_dat <- CellsPickMe::IDOL_mixed_cells #> Loading required namespace: minfi #> Setting options('download.file.method.GEOquery'='auto') #> Setting options('GEOquery.inmemory.gpl'=FALSE) # Obtain reference data set with the `getRef()` function ref_dat <- getRef(ref = \"IDOL\", normType = \"None\") #> see ?FlowSorted.Blood.EPIC and browseVignettes('FlowSorted.Blood.EPIC') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache # Combine sample and reference data sets together, followed by normalization (if selected) comb_dat <- combData(dataset = test_dat, reference = ref_dat$reference, class = \"rgset\", normType = \"None\", cellTypes = ref_dat$cellTypes) #> Combining Data with Flow Sorted Data and Normalizing. #> Loading required package: IlluminaHumanMethylationEPICmanifest #> Warning: there is no package called ‘IlluminaHumanMethylationEPICmanifest’ #> Error in getManifest(object): cannot load manifest package IlluminaHumanMethylationEPICmanifest"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/getRef.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the correct reference data set — getRef","title":"Extract the correct reference data set — getRef","text":"Extract correct reference data set","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/getRef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the correct reference data set — getRef","text":"","code":"getRef(   ref = c(\"Reinius\", \"IDOL\", \"IDOL_extended\", \"Mixed\", \"Cord\", \"DLPFC\", \"Middleton\"),   normType = c(\"None\", \"Noob\", \"Funnorm\", \"Quantile\") )"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/getRef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the correct reference data set — getRef","text":"ref character representing reference dataset, options \"Reinius\", \"IDOL\", \"IDOL_extended\", \"Mixed\", \"Cord\", \"DLPFC\", \"Middleton\" normType character representing normalization method, options \"None\", \"Noob\", \"Funnorm\", \"Quantile\"","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/getRef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the correct reference data set — getRef","text":"list requested reference data set (RGchannelSet Object) cell types sample (vector character)","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/getRef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the correct reference data set — getRef","text":"","code":"# Request the IDOL reference (2016) without normalization getRef(ref = \"IDOL\", normType = \"None\") #> see ?FlowSorted.Blood.EPIC and browseVignettes('FlowSorted.Blood.EPIC') for documentation #> loading from cache #> $reference #> class: RGChannelSet  #> dim: 1051815 49  #> metadata(0): #> assays(2): Green Red #> rownames(1051815): 1600101 1600111 ... 99810990 99810992 #> rowData names(0): #> colnames(49): 201868500150_R01C01 201868500150_R03C01 ... #>   201870610111_R06C01 201870610111_R07C01 #> colData names(32): Sample_Plate Sample_Well ... filenames normalmix #> Annotation #>   array: IlluminaHumanMethylationEPIC #>   annotation: ilm10b4.hg19 #>  #> $cellTypes #> [1] \"CD8T\"  \"CD4T\"  \"NK\"    \"Bcell\" \"Mono\"  \"Gran\"  #>"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/identClust.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the stability of selected features with pvClust — identClust","title":"Calculate the stability of selected features with pvClust — identClust","text":"Calculate stability selected features pvClust","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/identClust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the stability of selected features with pvClust — identClust","text":"","code":"identClust(dataNormed, probes, parallel = TRUE)"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/identClust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the stability of selected features with pvClust — identClust","text":"dataNormed list dataframe containing normalized data, output combData() probes list probes perform cell type prediction corresponding coefficient, output pickProbes() parallel SOCKcluster object specifying number processes parallelize, created doParallel::makeCluster()","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/identClust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the stability of selected features with pvClust — identClust","text":"Approximately Unbiased (AU) measure clusters based hierarchical clustering results, representing stability clusters via multiscale bootstrap resampling","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/identClust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the stability of selected features with pvClust — identClust","text":"","code":"# Load example blood cell mixture, subsetted from the IDOL dataset (GSE110554) test_dat <- CellsPickMe::IDOL_mixed_cells # Obtain reference data set with the `getRef()` function ref_dat <- getRef(ref = \"IDOL\", normType = \"None\") #> see ?FlowSorted.Blood.EPIC and browseVignettes('FlowSorted.Blood.EPIC') for documentation #> loading from cache # Combine sample and reference data sets together, followed by normalization (if selected) comb_dat <- combData(dataset = test_dat, reference = ref_dat$reference, class = \"rgset\", normType = \"None\", cellTypes = ref_dat$cellTypes) #> Combining Data with Flow Sorted Data and Normalizing. #> Loading required package: IlluminaHumanMethylationEPICmanifest #> Warning: there is no package called ‘IlluminaHumanMethylationEPICmanifest’ #> Error in getManifest(object): cannot load manifest package IlluminaHumanMethylationEPICmanifest # Pick probes with repeated cross validation with T-test probes <- pickProbes(dataNormed = comb_dat, probeList = \"Ttest\", probeSelect = \"both\", nProbes = 100, min.delta.beta = 0.05) #> Estimating Weights for Cell Type Prediction Based on Selected Probeset. #> Error: object 'comb_dat' not found # Create parallelization clusters and calculate cluster stability clustAU <- identClust(dataNormed = comb_dat, probes = probes, parallel = TRUE) #> Error: object 'probes' not found"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_450.html","id":null,"dir":"Reference","previous_headings":"","what":"IDOL probes for 450k array - adult blood — idol.a_450","title":"IDOL probes for 450k array - adult blood — idol.a_450","text":"CpG names probes selected IDOL, 450K DNAm microarray","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_450.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IDOL probes for 450k array - adult blood — idol.a_450","text":"","code":"idol.a_450"},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_450.html","id":"","dir":"Reference","previous_headings":"","what":"IDOL probes for 450k array - adult blood — idol.a_450","title":"IDOL probes for 450k array - adult blood — idol.a_450","text":"vector characters length 350 data obtained publication Salas et al. Please cite following using data. Salas LA, Koestler DC, Butler RA, Hansen HM et al. optimized library reference-based deconvolution whole-blood biospecimens assayed using Illumina HumanMethylationEPIC BeadArray. Genome Biol 2018 May 29;19(1):64. PMID: 29843789","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_450.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IDOL probes for 450k array - adult blood — idol.a_450","text":"https://pubmed.ncbi.nlm.nih.gov/29843789/","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_EPIC.html","id":null,"dir":"Reference","previous_headings":"","what":"IDOL probes for EPIC array - adult blood — idol.a_EPIC","title":"IDOL probes for EPIC array - adult blood — idol.a_EPIC","text":"CpG names probes selected IDOL, EPIC DNAm microarray","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_EPIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IDOL probes for EPIC array - adult blood — idol.a_EPIC","text":"","code":"idol.a_EPIC"},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_EPIC.html","id":"","dir":"Reference","previous_headings":"","what":"IDOL probes for EPIC array - adult blood — idol.a_EPIC","title":"IDOL probes for EPIC array - adult blood — idol.a_EPIC","text":"vector characters length 450 data obtained publication Salas et al. Please cite following using data. Salas LA, Koestler DC, Butler RA, Hansen HM et al. optimized library reference-based deconvolution whole-blood biospecimens assayed using Illumina HumanMethylationEPIC BeadArray. Genome Biol 2018 May 29;19(1):64. PMID: 29843789","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_EPIC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IDOL probes for EPIC array - adult blood — idol.a_EPIC","text":"https://pubmed.ncbi.nlm.nih.gov/29843789/","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"IDOL probes for EPIC array - extended 12 cell type reference — idol.a_ext","title":"IDOL probes for EPIC array - extended 12 cell type reference — idol.a_ext","text":"CpG names probes selected IDOL, extended blood cell type reference","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IDOL probes for EPIC array - extended 12 cell type reference — idol.a_ext","text":"","code":"idol.a_ext"},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_ext.html","id":"","dir":"Reference","previous_headings":"","what":"IDOL probes for EPIC array - extended 12 cell type reference — idol.a_ext","title":"IDOL probes for EPIC array - extended 12 cell type reference — idol.a_ext","text":"vector characters length 1200 data obtained publication Salas et al. Please cite following using data. Salas LA, Zhang Z, Koestler DC, Butler RA et al. Enhanced cell deconvolution peripheral blood using DNA methylation high-resolution immune profiling. Nat Commun 2022 Feb 9;13(1):761. PMID: 35140201","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.a_ext.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IDOL probes for EPIC array - extended 12 cell type reference — idol.a_ext","text":"https://pubmed.ncbi.nlm.nih.gov/35140201/","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.c.html","id":null,"dir":"Reference","previous_headings":"","what":"IDOL probes for 450k array - cord blood — idol.c","title":"IDOL probes for 450k array - cord blood — idol.c","text":"CpG names probes selected IDOL, cord blood cell type reference","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IDOL probes for 450k array - cord blood — idol.c","text":"","code":"idol.c"},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.c.html","id":"","dir":"Reference","previous_headings":"","what":"IDOL probes for 450k array - cord blood — idol.c","title":"IDOL probes for 450k array - cord blood — idol.c","text":"vector characters length 517 data obtained publication Gervin et al.. Please cite following using data. Gervin, K., Salas, L. ., Bakulski, K. M., Van Zelm, M. C., Koestler, D. C., Wiencke, J. K., ... & Jones, M. J. (2019). Systematic evaluation validation reference library selection methods deconvolution cord blood DNA methylation data. Clinical epigenetics, 11(1), 1-15.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/idol.c.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IDOL probes for 450k array - cord blood — idol.c","text":"https://pubmed.ncbi.nlm.nih.gov/29843789/","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickCompProbesCaret.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick features for cell type prediction with caret by repeated cross validation — pickCompProbesCaret","title":"Pick features for cell type prediction with caret by repeated cross validation — pickCompProbesCaret","text":"Pick features cell type prediction caret repeated cross validation","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickCompProbesCaret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick features for cell type prediction with caret by repeated cross validation — pickCompProbesCaret","text":"","code":"pickCompProbesCaret(   betas,   meta,   ct,   ps,   min.delta.beta,   p.val,   caretMods,   filterK = 1000,   seed = 1234,   plot = TRUE,   verbose = TRUE )"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickCompProbesCaret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick features for cell type prediction with caret by repeated cross validation — pickCompProbesCaret","text":"betas beta matrix reference DNA methylation data used select features cell type prediction meta data frame phenotype data, specifying reference samples cell types ct vector characters specifying cell types deconvolute ps character either \"\" \"\" specify first line filter T test prior passing machine learning algorithms min.delta.beta numeric variable defining T test minimum delta beta first line filter prior passing machine learning algorithms p.val numeric variable defining maximum T test p.value first line filter prior passing machine learning algorithms caretMods vector characters, selecting models use pick cell type prediction features, options include \"lasso\", \"EL\", \"BLR\", \"CART\", \"RF\", \"GBM\", \"PLDA\", \"GAnRF\", \"GAnNB\", \"GAnSVM\", \"GAnNN\" filterK integer, representing number probes input machine learning algorithms top T test probes seed integer specifying seed reproducibility plot Boolean specifying whether plot heatmap showing clustering performance using probes selected verbose Boolean specifying whether function verbose ","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickCompProbesCaretLOOCV.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick features for cell type prediction with caret by LOOCV — pickCompProbesCaretLOOCV","title":"Pick features for cell type prediction with caret by LOOCV — pickCompProbesCaretLOOCV","text":"Pick features cell type prediction caret LOOCV","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickCompProbesCaretLOOCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick features for cell type prediction with caret by LOOCV — pickCompProbesCaretLOOCV","text":"","code":"pickCompProbesCaretLOOCV(   betas,   meta,   ct,   ps,   min.delta.beta,   p.val,   caretMods,   filterK = 1000,   seed = 1234,   plot = TRUE,   verbose = TRUE )"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickCompProbesCaretLOOCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick features for cell type prediction with caret by LOOCV — pickCompProbesCaretLOOCV","text":"betas beta matrix reference DNA methylation data used select features cell type prediction meta data frame phenotype data, specifying reference samples cell types ct vector characters specifying cell types deconvolute ps character either \"\" \"\" specify first line filter T test prior passing machine learning algorithms min.delta.beta numeric variable defining T test minimum delta beta first line filter prior passing machine learning algorithms p.val numeric variable defining maximum T test p.value first line filter prior passing machine learning algorithms caretMods vector characters, selecting models use pick cell type prediction features, options include \"lasso\", \"EL\", \"BLR\", \"CART\", \"RF\", \"GBM\", \"PLDA\", \"GAnRF\", \"GAnNB\", \"GAnSVM\", \"GAnNN\" filterK integer, representing number probes input machine learning algorithms top T test probes seed integer specifying seed reproducibility plot Boolean specifying whether plot heatmap showing clustering performance using probes selected verbose Boolean specifying whether function verbose ","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickProbes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick features for cell type prediction — pickProbes","title":"Pick features for cell type prediction — pickProbes","text":"Pick features cell type prediction","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickProbes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick features for cell type prediction — pickProbes","text":"","code":"pickProbes(   dataNormed,   probeList = c(\"Ttest\", \"Caret\", \"IDOL\", \"DHS\"),   probeSelect = c(\"any\", \"both\"),   nProbes,   caretMods = c(\"lasso\", \"EL\", \"BLR\", \"CART\", \"RF\", \"GBM\", \"GAnLDA\", \"GAnRF\", \"GAnNB\",     \"GAnSVM\", \"GAnNN\"),   seed = 1,   p.val = 0.05,   min.delta.beta = 0,   filterK = 1000,   plotRef = TRUE,   verbose = TRUE )"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickProbes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick features for cell type prediction — pickProbes","text":"dataNormed list dataframe containing normalized data, output combData() probeList character, specifying probe selected. Options include \"Ttest\", \"Caret_CV\", \"Caret_LOOCV\", \"IDOL\" probeSelect probeSelect = Ttest, specify top probes picked T test output, options include \"\", \"\", \"pval\" nProbes integer specifying number probes pick cell type caretMods probeSelect %% c(\"Caret_CV\", \"Caret_LOOCV\"), input vector characters specify models use feature selection seed integer specifying seed reproducibility p.val probeSelect = Ttest, specify numeric value maximum pvalue cutoff min.delta.beta probeSelect = Ttest, specify numeric value minimum delta beta (effect size) cutoff filterK probeSelect %% c(\"Caret_CV\", \"Caret_LOOCV\"), input integer representing number probes input machine learning algorithms top T test probes plotRef Boolean specifying whether plot heatmap showing clustering performance using probes selected verbose Boolean specifying whether function verbose ","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pickProbes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick features for cell type prediction — pickProbes","text":"list containing features selected specified methods, coefficients selected probes downstream prediction","code":""},{"path":[]},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/predictCT.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cell type proportion based on sample DNAm data and coefficients obtained from the reference data — predictCT","title":"Estimate cell type proportion based on sample DNAm data and coefficients obtained from the reference data — predictCT","text":"Estimate cell type proportion based sample DNAm data coefficients obtained reference data","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/predictCT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cell type proportion based on sample DNAm data and coefficients obtained from the reference data — predictCT","text":"","code":"predictCT(   dataNormed,   probes,   method,   conditions = NULL,   removenRBC = F,   verbose = TRUE,   cetygo = TRUE )"},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/predictCT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cell type proportion based on sample DNAm data and coefficients obtained from the reference data — predictCT","text":"dataNormed list dataframe containing normalized data, output combData() probes list probes perform cell type prediction corresponding coefficient, output pickProbes() method character specifying regression method. Options include \"CP\", \"RPC\", \"SVR\" conditions character specifying specific conditions model fitting. Default NULL removenRBC Boolean specifying whether nucleated red blood cell (nRBC) proportion estimated, using reference nRBC verbose Boolean specifying whether function verbose cetygo Boolean specifying whether CETYGO score calculated estimate reference appropriateness","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/predictCT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cell type proportion based on sample DNAm data and coefficients obtained from the reference data — predictCT","text":"matrix containing estimated cell type proportion user samples","code":""},{"path":"https://maggie-fu.github.io/CellsPickMe/reference/predictCT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cell type proportion based on sample DNAm data and coefficients obtained from the reference data — predictCT","text":"","code":"# Load example blood cell mixture, subsetted from the IDOL dataset (GSE110554) test_dat <- CellsPickMe::IDOL_mixed_cells # Obtain reference data set with the `getRef()` function ref_dat <- getRef(ref = \"IDOL\", normType = \"None\") #> see ?FlowSorted.Blood.EPIC and browseVignettes('FlowSorted.Blood.EPIC') for documentation #> loading from cache # Combine sample and reference data sets together, followed by normalization (if selected) comb_dat <- combData(dataset = test_dat, reference = ref_dat$reference, class = \"rgset\", normType = \"None\", cellTypes = ref_dat$cellTypes) #> Combining Data with Flow Sorted Data and Normalizing. #> Loading required package: IlluminaHumanMethylationEPICmanifest #> Warning: there is no package called ‘IlluminaHumanMethylationEPICmanifest’ #> Error in getManifest(object): cannot load manifest package IlluminaHumanMethylationEPICmanifest # Pick probes with repeated cross validation with T-test probes <- pickProbes(dataNormed = comb_dat, probeList = \"Ttest\", probeSelect = \"both\", nProbes = 100, min.delta.beta = 0.05) #> Estimating Weights for Cell Type Prediction Based on Selected Probeset. #> Error: object 'comb_dat' not found # Estimate cell type proportion out <- predictCT(dataNormed = comb_dat, probes = probes, method = \"CP\", cetygo = TRUE) #> Estimating Composition Based on Selected Projection Method. #> Error: object 'probes' not found"}]
